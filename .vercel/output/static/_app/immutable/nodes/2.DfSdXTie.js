import"../chunks/Bzak7iHL.js";import{i as v}from"../chunks/vaeYXnz6.js";import{p as y,f as k,a as w,b as C,s,c as t,n as o,r as e,g as z}from"../chunks/CGDq_wfd.js";import{e as _}from"../chunks/Prf2h6--.js";import{p as A}from"../chunks/Ci7lTiXK.js";import{C as L}from"../chunks/Cxw-fkUr.js";import{I as u}from"../chunks/DBNKfLPB.js";var S=k(`<section class="space-y-12"><header class="anim-fade-in-up rounded-3xl border border-muted/20 bg-accent/10 px-8 py-12"><p class="text-sm uppercase tracking-wide text-accent/80">Willkommen im Lernmodus</p> <h2 class="mt-4 text-4xl font-bold text-emphasis">SvelteKit verstehen, nicht nur benutzen</h2> <p class="mt-4 max-w-2xl text-lg leading-relaxed text-emphasis/90">Dieses Template erklärt jeden Schritt ausführlich: Content-Autodiscovery, Hashtag-Generierung,
      Suche mit Fuse.js, responsives Tailwind-Layout sowie Accessibility-Checks. Perfekt, um als
      Junior-Entwickler:in praxisnah zu lernen.</p> <div class="mt-6 flex flex-wrap gap-3"><a class="focus-ring inline-flex items-center gap-2 rounded-full bg-accent px-5 py-2 text-sm font-semibold text-surface shadow-lg transition hover:bg-accent/80" href="/blog"><!> Zu allen Artikeln</a> <a class="focus-ring inline-flex items-center gap-2 rounded-full border border-accent px-5 py-2 text-sm font-semibold text-accent transition hover:bg-accent/10" href="/docs/01-uebersicht"><!> Lernpfad öffnen</a></div></header> <section class="space-y-6"><div class="flex items-center justify-between"><h3 class="text-2xl font-semibold text-emphasis">Neueste Beiträge</h3> <a class="text-sm font-semibold text-accent" href="/blog">Alle ansehen →</a></div> <div class="mt-6 grid gap-6 md:grid-cols-3"></div></section> <section class="anim-fade-in-up rounded-2xl border border-dashed border-muted/40 bg-surface/80 p-8"><h3 class="text-xl font-semibold text-emphasis">Lernpfad in drei Etappen</h3> <ol class="mt-4 space-y-3 text-sm text-emphasis/90"><li><strong>1. Struktur verstehen:</strong> Starte mit den Docs unter <code>/docs</code>, um Builds, Layout und Content-Indexierung kennenzulernen.</li> <li><strong>2. UI erweitern:</strong> Passe Komponenten in <code>src/lib/components</code> an, experimentiere mit Container-Queries und Theme-Varianten.</li> <li><strong>3. Automationen ausbauen:</strong> Ergänze eigene Checks (z. B. axe/pa11y) und feile an der Hashtag-Heuristik für deinen Use-Case.</li></ol></section></section>`);function P(f,l){y(l,!1);const h=A(l,"data",8)().posts.slice(0,3);v();var n=S(),a=t(n),c=s(t(a),6),r=t(c),x=t(r);u(x,{name:"articles",size:18}),o(),e(r);var d=s(r,2),g=t(d);u(g,{name:"home",size:18}),o(),e(d),e(c),e(a);var m=s(a,2),p=s(t(m),2);_(p,5,()=>h,i=>i.slug,(i,b)=>{L(i,{get post(){return z(b)}})}),e(p),e(m),o(2),e(n),w(f,n),C()}export{P as component};
